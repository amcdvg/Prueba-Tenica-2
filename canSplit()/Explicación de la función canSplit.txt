Para el desarrollo de esta punto de la prueba tecnica se encontraron dos formas de 
solucionar el problema, ya que como sabemos todos los problemas tiene multiples soluciones

por lo tanto para realizar las pruebas podrímos plantear lo siguiente:


 
 
A = [1, 3, 3, 8, 4, 3, 2, 3, 3]
 
 
i = canSplit(A)
 
if i == 1:
    print("Se puede particionar")
else:
    print("no se puede particionar")


Pero si se desea saber las listas particionadas se puede plantear lo 
siguiente

def canSplit(b):
 
    # do for each element in the list
    for i in range(len(b)):
        left_sum = 0
        for j in range(i):
            left_sum += b[j]
 
        right_sum = 0
        for j in range(i, len(b)):
            right_sum += b[j]
 
        # if the sum of `A[0…i-1]` is equal to `A[i, n-1]`
        if left_sum == right_sum:
            return i
 
    # can´t be partitioned
    return -1
 
 
A = [1, 3, 3, 8, 4, 3, 2, 3, 3]
 
 
    # obtener el índice `i` que apunta al inicio de la segunda sublista
i = canSplit(A)
 
if i != -1:
   print("se puede particionar de la siguiente forma\n")
   # print(A[:i])        # print the first sublist, `A[0, i-1]`
   # print(A[i:])        # print the second sublist, `A[i, n-1]`
else:
    print("no se puede particionar")


También podemos plantear para el otro caso 


# Partition the list into two sublists with the same sum
def canSplit(A):
 
    # calculate the sum of all list elements
    total_sum = sum(A)
 
    # variable to maintain the sum of processed elements
    sum_so_far = 0
 
    # do for each element in the list
    for i in range(len(A)):
 
        # if the sum of `A[0…i-1]` is equal to `A[i, n-1]`
        if sum_so_far == total_sum - sum_so_far:
            
            return i
 
        # update `sum_so_far` by including the value of the current element
        sum_so_far += A[i]
       
 
    return -1
 
 
A = [1, 3, 3, 8, 4, 3, 2, 3, 3]
 
 
    # obtener el índice `i` que apunta al inicio de la segunda sublista
i = canSplit(A)
 
if i != -1:
   print("se puede particionar de la siguiente forma\n")
   # print(A[:i])        # print the first sublist, `A[0, i-1]`
   # print(A[i:])        # print the second sublist, `A[i, n-1]`
else:
    print("no se puede particionar")